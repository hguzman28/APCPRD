<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">
	<persistence-unit name="DataCredito" transaction-type="JTA">
		<provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
		<jta-data-source>jdbc/Oracle/Jamar/APCPANAMA</jta-data-source>
		<class>com.jamar.apc.persistence.entities.Cencanceladas</class>
		<class>com.jamar.apc.persistence.entities.Cenclientesconsultar</class>
		<class>com.jamar.apc.persistence.entities.Cendetalle</class>
		<class>com.jamar.apc.persistence.entities.Cendetalles</class>
		<class>com.jamar.apc.persistence.entities.Cenestatus</class>
		<class>com.jamar.apc.persistence.entities.Cengenerales</class>
		<class>com.jamar.apc.persistence.entities.Cengruposidentificacion</class>
		<class>com.jamar.apc.persistence.entities.Cenmovimientos</class>
		<class>com.jamar.apc.persistence.entities.Cenreferenciascanceladas</class>
		<class>com.jamar.apc.persistence.entities.Cenresumen</class>
		<class>com.jamar.apc.persistence.entities.Cenresumenes</class>
		<class>com.jamar.apc.persistence.entities.Cenvalidacion</class>
		<class>com.jamar.apc.persistence.entities.Censcore</class>


		<!-- <jta-data-source>java:/jdbc/fabricaCreditos</jta-data-source> -->



		<properties>
			<property name="eclipselink.weaving" value="false"></property>
			<property name="
				javax.persistence.validation.mode "
				value="NONE" />

			<property name="eclipselink.target-database" value="Oracle" />
			<property name="eclipselink.target-server" value="WebLogic_10" />
			<property name="javax.persistence.query.timeout" value="180000" />
			<property name="eclipselink.jdbc.cache-statements" value="true" />
			<!-- Optimization #10 - batch writing -->
			<property name="eclipselink.jdbc.batch-writing" value="JDBC" />
			<property name="eclipselink.jdbc.batch-writing.size" value="1000" />
			<!-- Optimization #11 - disable caching for batch insert (caching only 
				improves reads, so only adds overhead for inserts) -->
			<property name="eclipselink.cache.shared.default" value="false" />
			<!-- Optimization #12 - turn logging off -->
			<!-- property name="eclipselink.logging.level" value="FINE" / -->
			<property name="eclipselink.logging.level" value="off" />
			<!-- Optimization #13 - close EntityManager on commit, to avoid cost of 
				resume -->
			<property name="eclipselink.persistence-context.close-on-commit"
				value="true" />
			<!-- Optimization #14 - avoid auto flush cost on query execution -->
			<property name="eclipselink.persistence-context.flush-mode"
				value="commit" />
			<!-- Optimization #15 - avoid cost of persist on commit -->
			<property name="eclipselink.persistence-context.persist-on-commit"
				value="false" />

		</properties>



	</persistence-unit>
</persistence>